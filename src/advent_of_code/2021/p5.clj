(ns advent-of-code.2021.p5
  (:require [clojure.string :as str]))

(def example "0,9 -> 5,9\n8,0 -> 0,8\n9,4 -> 3,4\n2,2 -> 2,1\n7,0 -> 7,4\n6,4 -> 2,0\n0,9 -> 2,9\n3,4 -> 1,4\n0,0 -> 8,8\n5,5 -> 8,2")
(def input "452,244 -> 452,303\n958,109 -> 958,639\n809,31 -> 778,31\n927,139 -> 917,139\n56,298 -> 273,298\n959,53 -> 959,739\n80,255 -> 434,255\n750,500 -> 73,500\n528,920 -> 428,820\n455,552 -> 289,718\n800,363 -> 800,25\n688,745 -> 688,696\n364,41 -> 364,351\n693,642 -> 693,67\n564,143 -> 755,143\n622,682 -> 622,869\n311,515 -> 311,120\n210,255 -> 210,363\n66,550 -> 540,550\n243,485 -> 381,623\n321,712 -> 680,712\n549,501 -> 70,22\n357,893 -> 823,893\n797,882 -> 536,621\n389,724 -> 389,329\n859,75 -> 859,591\n195,618 -> 161,618\n508,668 -> 974,202\n543,871 -> 889,525\n99,659 -> 371,387\n602,553 -> 547,553\n98,930 -> 98,683\n741,522 -> 895,522\n143,636 -> 683,636\n56,751 -> 56,555\n696,117 -> 784,117\n625,827 -> 277,827\n908,633 -> 213,633\n482,290 -> 256,290\n717,566 -> 717,923\n258,34 -> 728,34\n862,54 -> 862,869\n57,983 -> 987,53\n749,712 -> 715,678\n342,291 -> 147,291\n48,308 -> 48,600\n44,749 -> 823,749\n671,533 -> 944,533\n848,804 -> 315,804\n960,310 -> 980,310\n730,426 -> 730,330\n85,633 -> 690,28\n432,791 -> 692,531\n217,128 -> 217,763\n205,275 -> 781,851\n207,329 -> 201,329\n338,724 -> 338,783\n434,89 -> 501,89\n812,298 -> 812,480\n299,190 -> 752,190\n441,301 -> 441,872\n643,913 -> 643,21\n518,204 -> 518,442\n730,601 -> 930,601\n352,268 -> 766,268\n444,55 -> 444,372\n240,914 -> 656,498\n507,858 -> 507,581\n246,805 -> 805,805\n955,960 -> 381,386\n828,128 -> 818,128\n218,775 -> 557,436\n896,529 -> 173,529\n523,338 -> 581,338\n972,203 -> 770,203\n515,635 -> 728,848\n852,380 -> 852,469\n963,829 -> 688,829\n320,161 -> 234,161\n517,531 -> 919,933\n971,75 -> 578,75\n244,666 -> 244,308\n640,311 -> 164,787\n373,311 -> 373,611\n50,784 -> 653,181\n770,93 -> 96,767\n30,19 -> 887,876\n964,860 -> 447,343\n436,645 -> 436,813\n10,11 -> 982,983\n907,638 -> 907,979\n453,864 -> 453,246\n578,132 -> 757,132\n55,456 -> 548,456\n127,626 -> 493,626\n816,14 -> 748,14\n938,873 -> 938,478\n315,374 -> 902,961\n137,386 -> 137,478\n121,954 -> 702,373\n92,874 -> 714,252\n521,660 -> 34,660\n677,401 -> 531,401\n55,278 -> 331,278\n400,263 -> 426,237\n236,974 -> 236,545\n579,30 -> 579,198\n886,257 -> 320,823\n53,67 -> 922,936\n374,773 -> 470,773\n241,115 -> 241,61\n206,252 -> 519,565\n388,617 -> 388,778\n423,315 -> 978,315\n616,759 -> 174,317\n770,511 -> 770,487\n118,258 -> 309,258\n320,908 -> 320,433\n71,358 -> 50,337\n37,461 -> 175,323\n374,758 -> 374,96\n268,139 -> 268,785\n72,484 -> 364,484\n937,286 -> 574,286\n554,602 -> 554,475\n677,863 -> 245,863\n975,33 -> 54,954\n557,960 -> 560,957\n989,892 -> 175,78\n447,47 -> 830,430\n407,718 -> 634,945\n418,304 -> 418,103\n890,278 -> 890,915\n449,619 -> 243,825\n798,661 -> 137,661\n796,251 -> 67,980\n122,88 -> 122,518\n505,407 -> 695,217\n447,961 -> 447,524\n608,708 -> 390,708\n110,636 -> 878,636\n376,517 -> 376,409\n400,213 -> 767,213\n369,220 -> 369,203\n141,934 -> 921,154\n808,243 -> 808,983\n529,923 -> 529,438\n399,324 -> 350,324\n632,83 -> 276,83\n254,632 -> 812,74\n981,594 -> 453,594\n30,893 -> 472,893\n22,355 -> 614,355\n519,732 -> 519,911\n392,425 -> 392,710\n987,953 -> 987,82\n519,108 -> 370,108\n52,897 -> 52,449\n17,83 -> 913,979\n612,305 -> 118,799\n225,365 -> 225,639\n878,928 -> 45,95\n238,279 -> 908,279\n352,27 -> 352,572\n72,11 -> 347,286\n332,195 -> 332,189\n273,726 -> 204,726\n401,817 -> 498,817\n118,170 -> 118,675\n924,868 -> 528,472\n721,948 -> 886,948\n735,379 -> 331,379\n256,298 -> 256,187\n600,886 -> 314,886\n937,275 -> 937,385\n840,777 -> 92,29\n844,96 -> 844,691\n833,597 -> 833,762\n475,138 -> 475,207\n32,984 -> 675,984\n101,528 -> 101,497\n884,399 -> 302,981\n178,124 -> 670,616\n363,84 -> 527,84\n744,784 -> 336,784\n588,963 -> 588,543\n298,525 -> 626,525\n610,496 -> 265,496\n648,294 -> 460,106\n859,646 -> 859,867\n469,48 -> 987,566\n273,689 -> 103,859\n556,745 -> 440,745\n44,923 -> 941,26\n569,777 -> 781,565\n791,408 -> 276,923\n289,185 -> 289,608\n866,783 -> 760,783\n302,153 -> 420,35\n45,545 -> 479,979\n309,54 -> 850,54\n36,48 -> 973,985\n698,671 -> 129,102\n778,339 -> 587,339\n114,566 -> 114,621\n747,450 -> 583,286\n558,698 -> 558,912\n60,43 -> 987,970\n770,243 -> 770,490\n58,811 -> 58,131\n839,364 -> 839,614\n833,633 -> 833,208\n685,441 -> 600,526\n919,894 -> 769,894\n478,799 -> 601,922\n957,957 -> 237,957\n472,169 -> 472,96\n269,185 -> 269,117\n582,187 -> 582,460\n243,506 -> 722,506\n702,191 -> 125,768\n542,63 -> 542,398\n379,222 -> 920,763\n930,658 -> 930,724\n524,33 -> 524,739\n987,949 -> 50,12\n976,71 -> 852,71\n46,59 -> 921,934\n906,526 -> 906,623\n621,455 -> 621,590\n954,55 -> 954,499\n740,52 -> 740,448\n185,959 -> 937,207\n563,349 -> 261,651\n852,938 -> 114,938\n972,22 -> 16,978\n249,142 -> 199,142\n282,469 -> 282,831\n667,686 -> 685,686\n901,95 -> 901,578\n186,903 -> 336,903\n662,248 -> 99,811\n485,248 -> 833,248\n12,154 -> 734,154\n87,270 -> 760,270\n926,191 -> 799,191\n796,793 -> 451,448\n443,292 -> 625,292\n944,62 -> 944,859\n988,489 -> 374,489\n693,279 -> 693,55\n893,617 -> 893,247\n168,905 -> 910,905\n850,429 -> 773,429\n943,13 -> 364,13\n409,880 -> 409,806\n620,646 -> 567,699\n194,949 -> 194,660\n775,682 -> 775,456\n741,161 -> 581,161\n889,91 -> 42,938\n725,495 -> 273,43\n211,22 -> 897,22\n314,604 -> 562,604\n299,193 -> 914,193\n240,388 -> 612,16\n367,752 -> 367,114\n330,34 -> 931,34\n809,909 -> 809,757\n912,140 -> 224,140\n545,804 -> 503,804\n848,758 -> 848,638\n917,226 -> 538,226\n43,34 -> 43,97\n47,54 -> 47,435\n32,52 -> 843,863\n200,361 -> 398,163\n466,388 -> 705,388\n928,127 -> 104,951\n869,940 -> 869,787\n697,563 -> 167,563\n754,828 -> 754,141\n661,100 -> 968,100\n582,44 -> 582,182\n876,550 -> 876,268\n737,240 -> 27,950\n664,730 -> 633,730\n244,805 -> 228,805\n226,605 -> 211,605\n911,524 -> 548,524\n814,256 -> 889,181\n432,944 -> 432,235\n445,25 -> 445,499\n233,619 -> 91,477\n151,248 -> 880,977\n267,149 -> 317,149\n968,346 -> 968,371\n665,617 -> 665,770\n518,625 -> 518,579\n451,458 -> 628,635\n764,442 -> 255,442\n240,363 -> 680,803\n443,153 -> 863,153\n674,880 -> 973,581\n876,236 -> 876,817\n569,335 -> 569,907\n74,400 -> 74,679\n495,804 -> 827,472\n182,76 -> 832,726\n376,370 -> 986,370\n986,233 -> 541,233\n386,379 -> 386,837\n624,637 -> 454,637\n844,866 -> 179,201\n392,89 -> 627,89\n559,326 -> 525,326\n681,188 -> 418,188\n796,386 -> 796,637\n35,72 -> 952,989\n735,873 -> 407,873\n756,238 -> 328,238\n872,284 -> 394,284\n157,873 -> 243,873\n621,657 -> 913,657\n13,42 -> 13,598\n831,725 -> 831,270\n944,51 -> 87,908\n409,820 -> 913,316\n250,323 -> 622,323\n435,397 -> 435,409\n691,198 -> 691,952\n302,352 -> 872,352\n370,790 -> 362,790\n114,74 -> 926,74\n561,273 -> 561,169\n240,658 -> 240,584\n677,357 -> 557,477\n480,796 -> 544,732\n981,568 -> 319,568\n63,928 -> 957,34\n715,145 -> 81,779\n918,554 -> 292,554\n943,550 -> 943,23\n425,477 -> 277,329\n428,718 -> 428,612\n213,647 -> 244,616\n549,610 -> 549,39\n433,330 -> 433,922\n903,921 -> 148,166\n357,706 -> 913,150\n990,254 -> 990,368\n937,47 -> 937,34\n868,86 -> 260,694\n919,905 -> 140,126\n256,918 -> 980,194\n880,346 -> 331,895\n706,392 -> 706,328\n283,986 -> 758,511\n967,106 -> 123,106\n486,92 -> 486,47\n298,338 -> 888,928\n665,767 -> 987,767\n139,898 -> 139,94\n257,808 -> 257,388\n865,631 -> 865,624\n168,913 -> 168,984\n848,936 -> 197,285\n195,249 -> 764,249\n117,900 -> 249,900\n813,130 -> 10,933\n693,81 -> 693,554\n595,448 -> 987,840\n293,140 -> 904,751\n198,289 -> 234,289\n714,671 -> 989,396\n161,600 -> 161,465\n458,955 -> 807,955\n485,124 -> 485,835\n352,911 -> 691,911\n896,949 -> 103,156\n618,171 -> 618,847\n563,887 -> 44,887\n293,801 -> 293,492\n903,714 -> 651,714\n959,18 -> 265,712\n28,134 -> 851,957\n888,374 -> 647,374\n184,566 -> 184,411\n977,244 -> 926,193\n864,189 -> 427,626\n687,262 -> 700,275\n86,82 -> 891,887\n517,779 -> 517,599\n850,59 -> 256,653\n595,352 -> 595,142\n62,191 -> 618,747\n56,395 -> 124,463\n902,138 -> 418,138\n603,131 -> 185,549\n446,546 -> 446,397\n278,788 -> 916,788\n153,19 -> 707,573\n580,468 -> 502,390\n278,794 -> 447,963\n260,495 -> 315,550\n648,392 -> 726,392\n232,457 -> 633,858\n475,697 -> 740,697\n526,186 -> 526,588\n868,287 -> 868,668\n88,57 -> 88,984\n539,963 -> 539,859\n499,214 -> 963,678\n105,16 -> 937,848\n566,158 -> 566,26\n675,915 -> 675,555\n702,123 -> 360,123\n37,47 -> 120,130\n826,787 -> 79,787\n232,33 -> 833,634\n455,775 -> 455,919\n300,488 -> 300,92\n36,84 -> 36,514\n700,916 -> 700,391\n710,585 -> 710,14\n989,938 -> 120,69\n437,514 -> 437,277\n400,358 -> 400,623\n482,908 -> 802,908\n869,842 -> 53,26\n531,560 -> 180,560\n18,312 -> 18,223\n541,888 -> 541,438\n631,751 -> 631,238\n820,208 -> 192,836\n976,453 -> 561,38\n118,544 -> 318,744\n283,818 -> 283,138\n876,623 -> 327,623\n11,855 -> 283,855\n438,460 -> 145,167\n788,379 -> 250,379\n376,130 -> 890,130\n616,747 -> 538,825\n906,403 -> 906,306\n710,371 -> 710,200\n871,917 -> 629,917\n751,103 -> 345,103\n374,608 -> 641,608\n481,902 -> 198,902\n512,686 -> 590,764\n187,134 -> 949,896\n628,58 -> 170,516\n54,370 -> 23,401\n391,718 -> 523,718\n617,637 -> 448,637\n108,208 -> 233,208\n57,478 -> 633,478\n122,693 -> 734,693\n980,537 -> 980,639\n134,448 -> 134,439\n81,812 -> 515,812\n483,133 -> 215,133\n68,250 -> 68,476\n204,101 -> 204,934\n525,626 -> 924,227\n783,519 -> 373,929\n813,166 -> 813,837\n12,988 -> 988,12\n49,180 -> 46,180\n782,585 -> 782,194\n798,98 -> 459,437\n904,83 -> 333,654\n404,417 -> 404,819\n289,228 -> 431,86\n281,876 -> 964,193\n66,15 -> 66,570\n134,159 -> 784,809\n356,684 -> 442,598\n211,624 -> 572,624\n19,985 -> 986,18\n978,429 -> 978,791\n181,955 -> 832,304\n566,859 -> 566,281\n391,232 -> 535,232\n798,848 -> 17,67\n530,203 -> 530,932\n502,562 -> 287,562\n710,499 -> 451,758\n886,420 -> 163,420\n858,289 -> 632,515\n939,441 -> 939,280\n293,220 -> 444,220\n363,676 -> 159,676\n983,24 -> 46,961\n725,585 -> 154,14\n236,453 -> 467,453\n806,395 -> 806,557\n149,583 -> 149,200\n858,704 -> 858,272")

(defn parse [input]
  (->> (str/split-lines input)
       (map #(str/split % #"\s->\s|,"))
       (map (partial mapv #(Integer/parseInt %)))
       (map (partial split-at 2))))

(defn vertical? [line]
  (let [[x y] line]
    (= (first x) (first y))))

(defn vertical-dots [line]
  (let [[_ b] line
        min-x (reduce min (map second line))
        max-x (reduce max (map second line))]
    (map #(vector (first b) %) (range min-x (inc max-x)))))

(defn horizontal? [line]
  (let [[x y] line]
    (= (second x) (second y))))

(defn horizontal-dots [line]
  (let [[_ b] line
        min-y (reduce min (map first line))
        max-y (reduce max (map first line))]
    (map #(vector % (second b)) (range min-y (inc max-y)))))

(defn diagonal? [line]
  (let [[x y] line]
    (= (Math/abs ^int (- (first x) (first y)))
       (Math/abs ^int (- (second x) (second y))))))

(defn diagonal-dots [line]
  (let [[left right] (sort-by first line)
        delta      (- (second left) (second right))
        high-delta (if (pos? delta) dec inc)]
    (->> left
         (iterate (fn [[x y]] (vector (inc x) (high-delta y))))
         (take (inc (Math/abs ^int delta))))))

(defn dots [line]
  (cond
    (horizontal? line) (horizontal-dots line)
    (vertical? line) (vertical-dots line)))

(defn part-1 [input]
  (->> input
       (filter (some-fn horizontal? vertical?))
       (mapcat dots)
       (frequencies)
       (filter (comp #(< 1 %) val))
       (count)))

(defn dots-part-2 [line]
  (cond
    (horizontal? line) (horizontal-dots line)
    (vertical? line) (vertical-dots line)
    (diagonal? line) (diagonal-dots line)))

(defn part-2 [input]
  (->> input
       (mapcat dots-part-2)
       (frequencies)
       (filter (comp #(< 1 %) val))
       (count)))

(comment
  (-> example parse part-1)
  (-> input parse part-1)
  (-> example parse part-2)
  (-> input parse part-2))
